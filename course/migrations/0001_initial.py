# Generated by Django 4.2.10 on 2024-02-24 09:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('jw_id', models.TextField(unique=True)),
                ('code', models.TextField(unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('period', models.IntegerField(blank=True, null=True)),
                ('credits', models.FloatField(blank=True, null=True)),
                ('type_base', models.TextField(blank=True, null=True)),
                ('type_teaching_method', models.TextField(blank=True, null=True)),
                ('type_join_type', models.TextField(blank=True, null=True)),
                ('type_level', models.TextField(blank=True, null=True)),
                ('open_department', models.TextField(blank=True, null=True)),
                ('exam_type', models.TextField(blank=True, null=True)),
                ('grading_type', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('info', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EditableTextModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('last_modified_by', models.TextField(blank=True, null=True)),
                ('history', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('jw_id', models.TextField(unique=True)),
                ('code', models.TextField()),
                ('campus', models.TextField()),
                ('start_week', models.IntegerField(blank=True, null=True)),
                ('end_week', models.IntegerField(blank=True, null=True)),
                ('schedule_text', models.TextField(blank=True, null=True)),
                ('homepage_url', models.TextField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_lessons', to='course.course')),
                ('notice_md_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notice', to='course.editabletextmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('jw_id', models.TextField(unique=True)),
                ('campus', models.TextField()),
                ('building', models.TextField()),
                ('room', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('jw_id', models.TextField(unique=True)),
                ('code', models.TextField()),
                ('name', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('jw_id', models.TextField(unique=True)),
                ('name', models.TextField()),
                ('email', models.TextField(blank=True, null=True)),
                ('office_location', models.TextField(blank=True, null=True)),
                ('homepage_url', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessons', models.ManyToManyField(blank=True, to='course.lesson')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semester_lessons', to='course.semester'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='teacher_lessons', to='course.teacher'),
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_lectures', to='course.lesson')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='course.location')),
                ('teachers', models.ManyToManyField(blank=True, to='course.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('deadline', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_homeworks', to='course.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalLecture',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='course.lesson')),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='course.location')),
            ],
            options={
                'verbose_name': 'historical lecture',
                'verbose_name_plural': 'historical lectures',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHomework',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('description', models.TextField()),
                ('deadline', models.DateTimeField()),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='course.lesson')),
            ],
            options={
                'verbose_name': 'historical homework',
                'verbose_name_plural': 'historical homeworks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExam',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('jw_id', models.TextField(db_index=True)),
                ('type', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='course.lesson')),
            ],
            options={
                'verbose_name': 'historical exam',
                'verbose_name_plural': 'historical exams',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('jw_id', models.TextField(unique=True)),
                ('type', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.TextField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_exams', to='course.lesson')),
                ('locations', models.ManyToManyField(blank=True, to='course.location')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='semesters',
            field=models.ManyToManyField(blank=True, related_name='semester_courses', to='course.semester'),
        ),
    ]
